// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/user.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcServiceApp {
  public static partial class UserService
  {
    static readonly string __ServiceName = "UserService";

    static readonly grpc::Marshaller<global::GrpcServiceApp.ReqsGetOneUser> __Marshaller_ReqsGetOneUser = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServiceApp.ReqsGetOneUser.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServiceApp.RespGetOneUser> __Marshaller_RespGetOneUser = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServiceApp.RespGetOneUser.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServiceApp.ReqsNull> __Marshaller_ReqsNull = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServiceApp.ReqsNull.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServiceApp.RespGetAllUser> __Marshaller_RespGetAllUser = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServiceApp.RespGetAllUser.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServiceApp.User> __Marshaller_User = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServiceApp.User.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcServiceApp.SaveResult> __Marshaller_SaveResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcServiceApp.SaveResult.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcServiceApp.ReqsGetOneUser, global::GrpcServiceApp.RespGetOneUser> __Method_GetOneUser = new grpc::Method<global::GrpcServiceApp.ReqsGetOneUser, global::GrpcServiceApp.RespGetOneUser>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOneUser",
        __Marshaller_ReqsGetOneUser,
        __Marshaller_RespGetOneUser);

    static readonly grpc::Method<global::GrpcServiceApp.ReqsNull, global::GrpcServiceApp.RespGetAllUser> __Method_GetAllUser = new grpc::Method<global::GrpcServiceApp.ReqsNull, global::GrpcServiceApp.RespGetAllUser>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllUser",
        __Marshaller_ReqsNull,
        __Marshaller_RespGetAllUser);

    static readonly grpc::Method<global::GrpcServiceApp.User, global::GrpcServiceApp.SaveResult> __Method_Save = new grpc::Method<global::GrpcServiceApp.User, global::GrpcServiceApp.SaveResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Save",
        __Marshaller_User,
        __Marshaller_SaveResult);

    static readonly grpc::Method<global::GrpcServiceApp.User, global::GrpcServiceApp.SaveResult> __Method_Delete = new grpc::Method<global::GrpcServiceApp.User, global::GrpcServiceApp.SaveResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_User,
        __Marshaller_SaveResult);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcServiceApp.UserReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of UserService</summary>
    [grpc::BindServiceMethod(typeof(UserService), "BindService")]
    public abstract partial class UserServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GrpcServiceApp.RespGetOneUser> GetOneUser(global::GrpcServiceApp.ReqsGetOneUser request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcServiceApp.RespGetAllUser> GetAllUser(global::GrpcServiceApp.ReqsNull request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcServiceApp.SaveResult> Save(global::GrpcServiceApp.User request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcServiceApp.SaveResult> Delete(global::GrpcServiceApp.User request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(UserServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetOneUser, serviceImpl.GetOneUser)
          .AddMethod(__Method_GetAllUser, serviceImpl.GetAllUser)
          .AddMethod(__Method_Save, serviceImpl.Save)
          .AddMethod(__Method_Delete, serviceImpl.Delete).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, UserServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetOneUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServiceApp.ReqsGetOneUser, global::GrpcServiceApp.RespGetOneUser>(serviceImpl.GetOneUser));
      serviceBinder.AddMethod(__Method_GetAllUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServiceApp.ReqsNull, global::GrpcServiceApp.RespGetAllUser>(serviceImpl.GetAllUser));
      serviceBinder.AddMethod(__Method_Save, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServiceApp.User, global::GrpcServiceApp.SaveResult>(serviceImpl.Save));
      serviceBinder.AddMethod(__Method_Delete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcServiceApp.User, global::GrpcServiceApp.SaveResult>(serviceImpl.Delete));
    }

  }
}
#endregion
