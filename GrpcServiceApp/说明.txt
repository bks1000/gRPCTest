C# 使用gRPC的两种方式

1.自己写rpc定义、服务端、客户端。rpc定义文件proto需要工具生成代码并添加到项目中，然后服务端和客户端都需要引用此项目。
2.使用gRPC service(asp.net core)作为服务端。客户端添加服务引用（proto文件方式）


为了能够从协议缓冲区（.proto）文件定义生成代码，请添加Grpc.Tools NuGet软件包，该软件包将代码生成集成到您的构建中。
https://github.com/grpc/grpc
https://github.com/grpc/grpc/tree/master/src/csharp
https://github.com/grpc/grpc/blob/master/src/csharp/BUILD-INTEGRATION.md


Grpc4种服务方法的定义和实现
https://blog.csdn.net/hry2015/article/details/71699073
GRPC一共定义4种服务方法：

一元RPC(Unary RPCs )：这是最简单的定义，客户端发送一个请求，服务端返回一个结果
服务器流RPC（Server streaming RPCs）：客户端发送一个请求，服务端返回一个流给客户端，客户从流中读取一系列消息，直到读取所有小心
客户端流RPC(Client streaming RPCs )：客户端通过流向服务端发送一系列消息，然后等待服务端读取完数据并返回处理结果
双向流RPC(Bidirectional streaming RPCs)：客户端和服务端都可以独立向对方发送或接受一系列的消息。客户端和服务端读写的顺序是任意。



Oracle
Oracle.EntityFrameworkCore 
描述：
Oracle Data Provider for .NET (ODP.NET) Entity Framework Core for Oracle Database.

Oracle.ManagedDataAccess.Core
描述：
Oracle Data Provider for .NET (ODP.NET) Core is an ADO.NET driver that provides fast data access from Microsoft .NET Core clients to Oracle databases. ODP.NET Core consists of a single 100% managed code dynamic-link library.