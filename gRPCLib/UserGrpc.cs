// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/user.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace gRPCLib {
  public static partial class UserService
  {
    static readonly string __ServiceName = "gRPCLib.UserService";

    static readonly grpc::Marshaller<global::gRPCLib.ReqsGetOneUser> __Marshaller_gRPCLib_ReqsGetOneUser = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCLib.ReqsGetOneUser.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCLib.RespGetOneUser> __Marshaller_gRPCLib_RespGetOneUser = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCLib.RespGetOneUser.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCLib.ReqsNull> __Marshaller_gRPCLib_ReqsNull = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCLib.ReqsNull.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCLib.RespGetAllUser> __Marshaller_gRPCLib_RespGetAllUser = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCLib.RespGetAllUser.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCLib.User> __Marshaller_gRPCLib_User = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCLib.User.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::gRPCLib.SaveResult> __Marshaller_gRPCLib_SaveResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::gRPCLib.SaveResult.Parser.ParseFrom);

    static readonly grpc::Method<global::gRPCLib.ReqsGetOneUser, global::gRPCLib.RespGetOneUser> __Method_GetOneUser = new grpc::Method<global::gRPCLib.ReqsGetOneUser, global::gRPCLib.RespGetOneUser>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOneUser",
        __Marshaller_gRPCLib_ReqsGetOneUser,
        __Marshaller_gRPCLib_RespGetOneUser);

    static readonly grpc::Method<global::gRPCLib.ReqsNull, global::gRPCLib.RespGetAllUser> __Method_GetAllUser = new grpc::Method<global::gRPCLib.ReqsNull, global::gRPCLib.RespGetAllUser>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllUser",
        __Marshaller_gRPCLib_ReqsNull,
        __Marshaller_gRPCLib_RespGetAllUser);

    static readonly grpc::Method<global::gRPCLib.User, global::gRPCLib.SaveResult> __Method_Save = new grpc::Method<global::gRPCLib.User, global::gRPCLib.SaveResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Save",
        __Marshaller_gRPCLib_User,
        __Marshaller_gRPCLib_SaveResult);

    static readonly grpc::Method<global::gRPCLib.User, global::gRPCLib.SaveResult> __Method_Delete = new grpc::Method<global::gRPCLib.User, global::gRPCLib.SaveResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_gRPCLib_User,
        __Marshaller_gRPCLib_SaveResult);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::gRPCLib.UserReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of UserService</summary>
    [grpc::BindServiceMethod(typeof(UserService), "BindService")]
    public abstract partial class UserServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::gRPCLib.RespGetOneUser> GetOneUser(global::gRPCLib.ReqsGetOneUser request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPCLib.RespGetAllUser> GetAllUser(global::gRPCLib.ReqsNull request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPCLib.SaveResult> Save(global::gRPCLib.User request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::gRPCLib.SaveResult> Delete(global::gRPCLib.User request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for UserService</summary>
    public partial class UserServiceClient : grpc::ClientBase<UserServiceClient>
    {
      /// <summary>Creates a new client for UserService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public UserServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for UserService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public UserServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected UserServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected UserServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::gRPCLib.RespGetOneUser GetOneUser(global::gRPCLib.ReqsGetOneUser request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOneUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::gRPCLib.RespGetOneUser GetOneUser(global::gRPCLib.ReqsGetOneUser request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOneUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCLib.RespGetOneUser> GetOneUserAsync(global::gRPCLib.ReqsGetOneUser request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOneUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCLib.RespGetOneUser> GetOneUserAsync(global::gRPCLib.ReqsGetOneUser request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOneUser, null, options, request);
      }
      public virtual global::gRPCLib.RespGetAllUser GetAllUser(global::gRPCLib.ReqsNull request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::gRPCLib.RespGetAllUser GetAllUser(global::gRPCLib.ReqsNull request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllUser, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCLib.RespGetAllUser> GetAllUserAsync(global::gRPCLib.ReqsNull request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCLib.RespGetAllUser> GetAllUserAsync(global::gRPCLib.ReqsNull request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllUser, null, options, request);
      }
      public virtual global::gRPCLib.SaveResult Save(global::gRPCLib.User request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Save(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::gRPCLib.SaveResult Save(global::gRPCLib.User request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Save, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCLib.SaveResult> SaveAsync(global::gRPCLib.User request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SaveAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCLib.SaveResult> SaveAsync(global::gRPCLib.User request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Save, null, options, request);
      }
      public virtual global::gRPCLib.SaveResult Delete(global::gRPCLib.User request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::gRPCLib.SaveResult Delete(global::gRPCLib.User request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCLib.SaveResult> DeleteAsync(global::gRPCLib.User request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::gRPCLib.SaveResult> DeleteAsync(global::gRPCLib.User request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override UserServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new UserServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(UserServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetOneUser, serviceImpl.GetOneUser)
          .AddMethod(__Method_GetAllUser, serviceImpl.GetAllUser)
          .AddMethod(__Method_Save, serviceImpl.Save)
          .AddMethod(__Method_Delete, serviceImpl.Delete).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, UserServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetOneUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCLib.ReqsGetOneUser, global::gRPCLib.RespGetOneUser>(serviceImpl.GetOneUser));
      serviceBinder.AddMethod(__Method_GetAllUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCLib.ReqsNull, global::gRPCLib.RespGetAllUser>(serviceImpl.GetAllUser));
      serviceBinder.AddMethod(__Method_Save, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCLib.User, global::gRPCLib.SaveResult>(serviceImpl.Save));
      serviceBinder.AddMethod(__Method_Delete, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::gRPCLib.User, global::gRPCLib.SaveResult>(serviceImpl.Delete));
    }

  }
}
#endregion
